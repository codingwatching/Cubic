on:
  push:
    branches: ["master"]

permissions:
  contents: write

env:
  EM_VERSION: 3.1.34
  EM_CACHE_FOLDER: 'emsdk-cache'

jobs:
  build-windows:
    name: Build Windows
    concurrency: ci-windows-${{ github.ref }}
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Add MSBUILD to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Build
        run: msbuild Windows\Cubic.vcxproj -t:rebuild -property:Configuration=Release -property:Platform=x64

      - name: Bundle
        run: |
          cd Windows\x64\Release
          tar.exe -a -c -f cubic.zip Cubic.exe SDL2.dll glew32.dll

      - name: Publish
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Windows/x64/Release/cubic.zip
          asset_name: Cubic_Windows.zip
          tag: Build
          overwrite: true
          
  build-ubuntu:
    name: Build Ubuntu
    concurrency: ci-ubuntu-${{ github.ref }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Install Dependencies
        run: sudo apt install clang libgl-dev libglew-dev libsdl2-dev

      - name: Build
        run: |
          cd Ubuntu
          make -j

      - name: Bundle
        run: |
          cd Ubuntu/Build
          tar -a -c -f cubic.zip cubic

      - name: Publish
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Ubuntu/Build/cubic.zip
          asset_name: Cubic_Ubuntu.zip
          tag: Build
          overwrite: true
          
  build-macos:
    name: Build MacOS
    concurrency: ci-ubuntu-${{ github.ref }}
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        run: |
          cd MacOS
          make -j

      - name: Bundle
        run: |
          cd MacOS/Build
          tar -a -c -f cubic.zip cubic libSDL2.dylib libGLEW.dylib

      - name: Publish
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: MacOS/Build/cubic.zip
          asset_name: Cubic_MacOS.zip
          tag: Build
          overwrite: true
      
  build-deploy-web:
    name: Build and Deploy
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Cache
        id: cache-system-libraries
        uses: actions/cache@v2
        with:
          path: ${{env.EM_CACHE_FOLDER}}
          key: ${{env.EM_VERSION}}-${{ runner.os }}
        
      - name: Install Emsdk
        uses: mymindstorm/setup-emsdk@v11
        with:
          version: ${{env.EM_VERSION}}
          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}

      - name: Build
        run: |
          cd Web
          make -j4
          
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: Web/Build
